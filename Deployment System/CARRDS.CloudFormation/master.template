{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "",
    "Parameters"               : {
        "EnvironmentName" : {
            "Type" : "String",
            "Default" : "",
            "Description" : "A name prefix which helps to identify resources associated with this stack"
        },
        "StackSourceBucket" : {
            "Type" : "String",
            "Default" : "",
            "Description" : "The Bucket containing the master.template this stack is being built from."
        },
        "StackSourcePath"   : {
            "Type" : "String",
            "Default" : "",
            "Description" : "The path to the master.template file inside of StackSourceBucket"
        },
        "ActiveAutodeploy"  : {
            "Type" : "String",
            "Default" : "true",
            "AllowedValues" : [
                "true",
                "false"
            ],
            "Description"   : "Set this to false if you do not want the system to autodeploy uploaded code."
        }
    },
    "Conditions"               : {
        "SetLambdaTrigger" : {
            "Fn::Equals" : [
                {
                    "Ref" : "ActiveAutodeploy"
                },
                "true"
            ]
        }
    },
    "Resources"                : {
        "ExternalAccessAPI" : {
            "Type" : "AWS::ApiGateway::RestApi",
            "Properties" : {
                "Description" : "CARRDS System API",
                "Name"        : {
                    "Fn::Sub" : "${EnvironmentName}-CARRDS"
                }
            }
        },
        "APIStage"          : {
            "Type" : "AWS::ApiGateway::Stage",
            "DependsOn" : [
                "ApiGatewayAccount"
            ],
            "Properties" : {
                "DeploymentId" : {
                    "Ref" : "ApiDeployment"
                },
                "MethodSettings" : [
                    {
                        "DataTraceEnabled" : true,
                        "HttpMethod"       : "*",
                        "LoggingLevel"     : "INFO",
                        "ResourcePath"     : "/*"
                    }
                ],
                "RestApiId"      : {
                    "Ref" : "ExternalAccessAPI"
                },
                "StageName"      : "LATEST"
            }
        },
        "ApiGatewayAccount" : {
            "Type" : "AWS::ApiGateway::Account",
            "Properties" : {
                "CloudWatchRoleArn" : {
                    "Fn::GetAtt" : [
                        "ApiGatewayCloudWatchLogsRole",
                        "Arn"
                    ]
                }
            }
        },
        "ApiDeployment"     : {
            "Type" : "AWS::ApiGateway::Deployment",
            "DependsOn" : [
                "AddCustomersGET"
            ],
            "Properties" : {
                "RestApiId" : {
                    "Ref" : "ExternalAccessAPI"
                },
                "StageName" : "DummyStage"
            }
        },

        "ScanBucketLambda"  : {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
                "Code" : {
                    "S3Bucket" : {
                        "Ref" : "StackSourceBucket"
                    },
                    "S3Key"    : {
                        "Fn::Sub" : "${StackSourcePath}/Resources/CARRDS.Lambda.BucketScanner.zip"
                    }
                },
                "FunctionName" : {
                    "Fn::Join" : [
                        "-",
                        [
                            {
                                "Ref" : "EnvironmentName"
                            },
                            "ScanBucket"
                        ]
                    ]
                },
                "Environment"  : {
                    "Variables" : {
                        "InternalSourceBucket" : {
                            "Ref" : "InternalSourceBucket"
                        },
						"OperationsBucket" : { 
                            "Ref" : "OperationsBucket" 
                        },
                        "TargetCARRDSAPIEndpoint" : "Placeholder"
                    }
                },
                "Handler"      : "CARRDS.Lambda.BucketScanner::CARRDS.Lambda.BucketScanner.Function::FunctionHandler",
                "MemorySize"   : 128,
                "Role"         : {
                    "Fn::GetAtt" : [
                        "ProjectDeploymentLambdaRole",
                        "Arn"
                    ]
                },
                "Runtime"      : "dotnetcore1.0",
                "Timeout"      : 300
            },
            "Metadata"   : {
                "AWS::CloudFormation::Designer" : {
                    "id" : "3670b735-d187-4e99-a4cf-8a868e65fada"
                }
            }
        },

        "ApiGatewayCloudWatchLogsRole" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "AssumeRolePolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : [
                                    "apigateway.amazonaws.com"
                                ]
                            },
                            "Action"    : [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies"                 : [
                    {
                        "PolicyName" : "ApiGatewayLogsPolicy",
                        "PolicyDocument" : {
                            "Version" : "2012-10-17",
                            "Statement" : [
                                {
                                    "Effect" : "Allow",
                                    "Action" : [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:DescribeLogGroups",
                                        "logs:DescribeLogStreams",
                                        "logs:PutLogEvents",
                                        "logs:GetLogEvents",
                                        "logs:FilterLogEvents"
                                    ],
                                    "Resource" : "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "AuthorizationResource"        : {
            "Type" : "AWS::ApiGateway::Resource",
            "Properties" : {
                "RestApiId" : {
                    "Ref" : "ExternalAccessAPI"
                },
                "ParentId"  : {
                    "Fn::GetAtt" : [
                        "ExternalAccessAPI",
                        "RootResourceId"
                    ]
                },
                "PathPart"  : "Authorization"
            }
        },
        "GETAuthorizationResource"     : {
            "Type" : "AWS::ApiGateway::Resource",
            "Properties" : {
                "RestApiId" : {
                    "Ref" : "ExternalAccessAPI"
                },
                "ParentId"  : {
                    "Ref" : "AuthorizationResource"
                },
                "PathPart"  : "getauthorization"
            }
        },
        "AddCustomersGET"              : {
            "Type" : "AWS::ApiGateway::Method",
            "Properties" : {
                "RestApiId" : {
                    "Ref" : "ExternalAccessAPI"
                },
                "ResourceId" : {
                    "Ref" : "GETAuthorizationResource"
                },
                "HttpMethod" : "POST",
                "AuthorizationType" : "NONE",
                "Integration"       : {
                    "IntegrationHttpMethod" : "POST",
                    "Type"                  : "AWS_PROXY",
                    "Uri"                   : {
                        "Fn::Sub" : "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetAuthorizationLambda.Arn}/invocations"
                    }
                }
            }
        },
        "LambdaPermission"             : {
            "Type" : "AWS::Lambda::Permission",
            "Properties" : {
                "Action" : "lambda:invokeFunction",
                "FunctionName" : {
                    "Fn::GetAtt" : [
                        "GetAuthorizationLambda",
                        "Arn"
                    ]
                },
                "Principal"    : "apigateway.amazonaws.com",
                "SourceArn"    : {
                    "Fn::Join" : [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref" : "AWS::Region"
                            },
                            ":",
                            {
                                "Ref" : "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref" : "ExternalAccessAPI"
                            },
                            "/*"
                        ]
                    ]
                }
            }
        },
        "GetAuthorizationLambda"       : {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
                "Code" : {
                    "S3Bucket" : {
                        "Ref" : "StackSourceBucket"
                    },
                    "S3Key"    : {
                        "Fn::Sub" : "${StackSourcePath}/Resources/CARRDS.Lambda.GetAuthorization.zip"
                    }
                },
                "FunctionName" : {
                    "Fn::Join" : [
                        "-",
                        [
                            {
                                "Ref" : "EnvironmentName"
                            },
                            "API",
                            "GetAuthorization"
                        ]
                    ]
                },
                "Environment"  : {
                    "Variables" : {
                        "InternalSourceBucket" : {
                            "Ref" : "InternalSourceBucket"
                        },
						"OperationsBucket" : { 
                            "Ref" : "OperationsBucket" 
                        }
                    }
                },
                "Handler"      : "CARRDS.Lambda.GetAuthorization::CARRDS.Lambda.GetAuthorization.Function::FunctionHandler",
                "MemorySize"   : 128,
                "Role"         : {
                    "Fn::GetAtt" : [
                        "ProjectDeploymentLambdaRole",
                        "Arn"
                    ]
                },
                "Runtime"      : "dotnetcore1.0",
                "Timeout"      : 300
            },
            "Metadata"   : {
                "AWS::CloudFormation::Designer" : {
                    "id" : "3670b735-d187-4e99-a4cf-8a868e65fada"
                }
            }
        },

        "InternalSourceBucket"         : {
            "Type" : "AWS::S3::Bucket",
			"DependsOn" : "ProjectCreationLambda",
            "Properties" : {
                "NotificationConfiguration" : {
                    "Fn::If" : [
                        "SetLambdaTrigger",
                        {
                            "LambdaConfigurations" : [
                                {
                                    "Function" : {
                                        "Fn::GetAtt" : [
                                            "ProjectCreationLambda",
                                            "Arn"
                                        ]
                                    },
                                    "Event"    : "s3:ObjectCreated:*",
                                    "Filter"   : {
                                        "S3Key" : {
                                            "Rules" : [
                                                {
                                                    "Name" : "suffix",
                                                    "Value" : "CARRDS.json"
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        },
						{"Ref" : "AWS::NoValue"}
                    ]
                },
				"VersioningConfiguration" : {"Status" : "Enabled"},
				"LifecycleConfiguration" : {
                    "Rules" : [
                        {
                            "NoncurrentVersionExpirationInDays" : 1,
                            "Status"           : "Enabled"
                        }
                    ]
                }
            }
        },
        "BucketLambdaPermission"       : {
            "Type" : "AWS::Lambda::Permission",
            "Properties" : {
                "Action" : "lambda:InvokeFunction",
                "FunctionName" : {
                    "Fn::GetAtt" : [
                        "ProjectCreationLambda",
                        "Arn"
                    ]
                },
                "Principal"    : "s3.amazonaws.com",
                "SourceAccount" : {
                    "Ref" : "AWS::AccountId"
                }
            }
        },

		"OperationsBucket"         : {
            "Type" : "AWS::S3::Bucket",
            "Properties" : {
				"VersioningConfiguration" : {"Status" : "Enabled"}
            }
        },
		
		"StackStatusSNS": {
            "Type": "AWS::SNS::Topic",
			"DependsOn": [ "StackStreamResponseLambda" ],
            "Properties": {
				"Subscription": [
					{
						"Endpoint": {
							"Fn::GetAtt": [ "StackStreamResponseLambda", "Arn" ]
						},
						"Protocol": "lambda"
					}
				]
            }
        },
		"StackStreamResponseLambda"        : {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
                "Code" : {
                    "S3Bucket" : {
                        "Ref" : "StackSourceBucket"
                    },
                    "S3Key"    : {
                        "Fn::Sub" : "${StackSourcePath}/Resources/CARRDS.Lambda.StackStreamResponse.zip"
                    }
                },
                "FunctionName" : {
                    "Fn::Join" : [
                        "-",
                        [
                            {
                                "Ref" : "EnvironmentName"
                            },
                            "StackStreamResponse"
                        ]
                    ]
                },
                "Handler"      : "CARRDS.Lambda.StackStreamResponse::CARRDS.Lambda.StackStreamResponse.Function::FunctionHandler",
                "MemorySize"   : 128,
				"Environment"  : { 
                    "Variables" : { 
						"OperationsBucket" : { 
                            "Ref" : "OperationsBucket" 
                        } 
                    } 
                },
                "Role"         : {
                    "Fn::GetAtt" : [
                        "ProjectDeploymentLambdaRole",
                        "Arn"
                    ]
                },
                "Runtime"      : "dotnetcore1.0",
                "Timeout"      : 30
            }
        },
		"LambdaInvokePermission": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"Action": "lambda:InvokeFunction",
				"Principal": "sns.amazonaws.com",
				"SourceArn": { "Ref": "StackStatusSNS" },
				"FunctionName": {
					"Fn::GetAtt": [ "StackStreamResponseLambda", "Arn" ]
				}
			}
		},

        "ProjectCreationLambda"        : {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
                "Code" : {
                    "S3Bucket" : {
                        "Ref" : "StackSourceBucket"
                    },
                    "S3Key"    : {
                        "Fn::Sub" : "${StackSourcePath}/Resources/CARRDS.Lambda.ProjectDeployment.zip"
                    }
                },
                "FunctionName" : {
                    "Fn::Join" : [
                        "-",
                        [
                            {
                                "Ref" : "EnvironmentName"
                            },
                            "ProjectCreation"
                        ]
                    ]
                },
                "Handler"      : "CARRDS.Lambda.ProjectDeployment::CARRDS.Lambda.ProjectDeployment.Function::FunctionHandler",
                "MemorySize"   : 128,
				"Environment"  : {
                    "Variables" : {
                        "StackStatusSNS" : {
                            "Ref" : "StackStatusSNS"
                        },
						"OperationsBucket" : { 
                            "Ref" : "OperationsBucket" 
                        }
                    }
                },
                "Role"         : {
                    "Fn::GetAtt" : [
                        "ProjectDeploymentLambdaRole",
                        "Arn"
                    ]
                },
                "Runtime"      : "dotnetcore1.0",
                "Timeout"      : 300
            },
            "Metadata"   : {
                "AWS::CloudFormation::Designer" : {
                    "id" : "3670b735-d187-4e99-a4cf-8a868e65fada"
                }
            }
        },
        "ProjectDeploymentLambdaPolicy" : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : {
                    "Fn::Sub" : "CARRDS-${AWS::Region}-${AWS::StackName}-ProjectDeploymentPolicy"
                },
                "Roles"      : [
                    {
                        "Ref" : "ProjectDeploymentLambdaRole"
                    }
                ],
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : "*",
                            "Resource" : "*"
                        }
                    ]
                }
            }
        },
        "ProjectDeploymentLambdaRole"   : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "AssumeRolePolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Sid" : "",
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : "lambda.amazonaws.com"
                            },
                            "Action"    : "sts:AssumeRole"
                        },
                        {
                            "Sid" : "",
                            "Effect" : "Allow",
                            "Principal" : {
                                "AWS" : {
                                    "Fn::Sub" : "arn:aws:iam::${AWS::AccountId}:root"
                                }
                            },
                            "Action"    : "sts:AssumeRole"
                        }
                    ]
                }
            }
        },

        "UploadUser"                    : {
            "Type" : "AWS::IAM::User",
            "Properties" : {
            }
        },
        "UploadUserAccessKey"           : {
            "Type" : "AWS::IAM::AccessKey",
            "Properties" : {
                "UserName" : {
                    "Ref" : "UploadUser"
                }
            }
        },
        "S3UploadPolicy"                : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : {
                    "Fn::Join" : [
                        "-",
                        [
                            {
                                "Ref" : "InternalSourceBucket"
                            },
                            "UploadPolicy"
                        ]
                    ]
                },
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "s3:*"
                            ],
                            "Resource" : [
                                {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref" : "InternalSourceBucket"
                                            }
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Users"          : [
                    {
                        "Ref" : "UploadUser"
                    }
                ]
            }
        },
        "BucketUploadPolicy"            : {
            "Type" : "AWS::S3::BucketPolicy",
            "Properties" : {
                "Bucket" : {
                    "Ref" : "InternalSourceBucket"
                },
                "PolicyDocument" : {
                    "Statement" : [
                        {
                            "Action" : [
                                "*"
                            ],
                            "Effect" : "Allow",
                            "Resource" : {
                                "Fn::Join" : [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref" : "InternalSourceBucket"
                                        },
                                        "/*"
                                    ]
                                ]
                            },
                            "Principal" : {
                                "AWS" : {
                                    "Fn::GetAtt" : [
                                        "UploadUser",
                                        "Arn"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    "Outputs"                  : {
        "DeploymentBucketName" : {
            "Description" : "The deployment S3 bucket name",
            "Value"       : {
                "Ref" : "InternalSourceBucket"
            }
        },
		"OperationsBucketName" : {
            "Description" : "The Operations S3 bucket name",
            "Value"       : {
                "Ref" : "OperationsBucket"
            }
        },
        "AccessKey"  : {
            "Description" : "Access key of the user who has permissions to upload to the S3 bucket",
            "Value"       : {
                "Ref" : "UploadUserAccessKey"
            }
        },
        "SecretAccessKey" : {
            "Description" : "Secret access key of the user who has permissions to upload to the S3 bucket",
            "Value"       : {
                "Fn::GetAtt" : [
                    "UploadUserAccessKey",
                    "SecretAccessKey"
                ]
            }
        },
        "Region"          : {
            "Description" : "The Region of the deployment",
            "Value"       : {
                "Ref" : "AWS::Region"
            }
        }
    }
}